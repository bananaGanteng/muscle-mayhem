local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local plots = workspace:WaitForChild("Plots")

local toggleActive = false
local debounce = false
local resetFromScript = false
local base = nil
local purchasesFolder = nil

-- Cari base hanya sekali di awal
do
    local userLower = string.lower(player.Name)
    local displayLower = string.lower(player.DisplayName)
    for _, model in ipairs(plots:GetChildren()) do
        if model:IsA("Model") then
            for _, obj in ipairs(model:GetDescendants()) do
                if obj:IsA("TextLabel") then
                    local txt = string.lower(obj.Text)
                    if string.find(txt, userLower, 1, true) or string.find(txt, displayLower, 1, true) then
                        base = model
                        break
                    end
                end
            end
        end
    end
end

if base then
    purchasesFolder = base:FindFirstChild("Purchases")
end

-- Cache RemainingTime & Hitbox sekali saja
local function findObjects()
    if not purchasesFolder then return nil, nil end
    local rem, hit
    for _, obj in ipairs(purchasesFolder:GetDescendants()) do
        if obj:IsA("TextLabel") and obj.Name == "RemainingTime" then
            rem = obj
        elseif obj:IsA("BasePart") and obj.Name == "Hitbox" then
            hit = obj
        end
    end
    return rem, hit
end

local function wiggleWhileCountdown(hrp, label, hitbox)
    local countdownSet = {["4s"]=true, ["3s"]=true, ["2s"]=true, ["1s"]=true, ["0s"]=true}
    if not hrp or not hrp.Parent or not label then return end

    local hum = hrp.Parent:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    local centerPos = hitbox and hitbox.Position or hrp.Position
    local amplitude = 2
    local radiusLock = 6
    local direction = 1
    local run = true

    local originalAutoRotate = hum.AutoRotate
    hum.AutoRotate = false

    local hbConn
    hbConn = RunService.Heartbeat:Connect(function()
        if not toggleActive or not label or not countdownSet[label.Text] or not hum.Parent then
            run = false
            if hbConn then hbConn:Disconnect() end
            hum.AutoRotate = originalAutoRotate
            return
        end
        if hitbox and hitbox.Parent then
            centerPos = hitbox.Position
        end
        local target = centerPos + Vector3.new(direction * amplitude, 0, 0)
        hum:MoveTo(target)
        direction = -direction
        if (hrp.Position - centerPos).Magnitude > radiusLock then
            hrp.CFrame = CFrame.new(centerPos)
        end
    end)
end

local function walkToBase(hitbox)
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart", 5)
    local hum = char:WaitForChild("Humanoid", 5)
    if not (hum and hrp and hitbox) then return end

    local touched = false
    local touchedConn
    touchedConn = hitbox.Touched:Connect(function(part)
        if part:IsDescendantOf(char) then
            touched = true
            touchedConn:Disconnect()
            local countdownLabel, _ = findObjects()
            if countdownLabel then
                wiggleWhileCountdown(hrp, countdownLabel, hitbox)
            end
        end
    end)

    task.spawn(function()
        while toggleActive and not touched do
            hum:MoveTo(hitbox.Position)
            task.wait(0.5)
        end
    end)
end

-- Koneksi hanya aktif saat ON
local countdownConnection

local function startCountdown()
    local checkTimes = {"8s","6s"}
    if countdownConnection then countdownConnection:Disconnect() end

    countdownConnection = RunService.Heartbeat:Connect(function()
        if not toggleActive then return end
        local countdownLabel, hitboxPart = findObjects()
        if countdownLabel and not debounce then
            for _, t in ipairs(checkTimes) do
                if countdownLabel.Text == t then
                    local char = player.Character or player.CharacterAdded:Wait()
                    local hum = char:FindFirstChildOfClass("Humanoid")
                    if hum then
                        debounce = true
                        hum.Health = 0
                        task.spawn(function()
                            player.CharacterAdded:Wait()
                            local _, newHitbox = findObjects()
                            if newHitbox then
                                walkToBase(newHitbox)
                            end
                            task.delay(1, function()
                                debounce = false
                            end)
                        end)
                        break
                    end
                end
            end
        end
    end)
end

-- Toggle ON/OFF
local function AutoLockBase_SetEnabled(state)
    toggleActive = state
    if state then
        if not debounce then
            debounce = true
            local char = player.Character
            if char then
                local hum = char:FindFirstChildOfClass("Humanoid")
                if hum then hum.Health = 0 end
            end
            player.CharacterAdded:Wait()
            task.delay(0.1, function()
                local _, hitbox = findObjects()
                if hitbox then walkToBase(hitbox) end
                debounce = false
            end)
        end
        startCountdown()
    else
        if countdownConnection then
            countdownConnection:Disconnect()
            countdownConnection = nil
        end
    end
end

getgenv().AutoLockBase_SetEnabled = AutoLockBase_SetEnabled
